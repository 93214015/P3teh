<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPF.NETCore.UserControls"
             xmlns:gif="http://wpfanimatedgif.codeplex.com" x:Class="WPF.NETCore.UserControls.UCDemoSection"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Loaded="UserControl_Loaded">
    <UserControl.Resources>

        <Color x:Key="ColorGrid">#000D30</Color>
        <Color x:Key="ColorGridColumn">#D9D9D9</Color>
        <Color x:Key="ColorGridRow">#D9D9D9</Color>

        <SolidColorBrush x:Key="SolidColorBrushGrid" Color="{StaticResource ColorGrid}" />
        <SolidColorBrush x:Key="SolidColorBrushGridColumn" Color="{StaticResource ColorGridColumn}" />
        <SolidColorBrush x:Key="SolidColorBrushGridRow" Color="{StaticResource ColorGridRow}" />

        <Style TargetType="{x:Type TextBlock}" x:Key="StyleTextInfo">
            <Setter Property="TextAlignment" Value="Right" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="FontFamily" Value="{StaticResource FontAdobeArabic}" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#D9D9D9" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="StyleTextInfo2">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{StaticResource FontAdobeArabic}" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#000D30" />
            <Setter Property="Grid.Column" Value="2" />
        </Style>
        <Storyboard x:Key="DemoAnimation" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="50"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)">
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02.6000000" Value="5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="-50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo2" Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)">
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo2" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:03" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="STBShowResultImage">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="5"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="STBHideResultImage">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="50"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.1000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImgDemo" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:01.1000000" Value="-50"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="STBShowResultPopIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="STBShowBackgroundProcessing">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CTBackgroundProcessing" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CTBackgroundProcessing" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="STBHideBackgroundProcessing">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CTBackgroundProcessing" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CTBackgroundProcessing" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="STBShowBackgroundThumbnail">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CTBackgroundThumbnail" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CTBackgroundThumbnail" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>

    <Border x:Name="border">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Border Padding="20,0,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid x:Name="GridCameraPicture">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image x:Name="CameraPicture" Grid.Row="1" Grid.Column="1" Grid.RowSpan="12" Grid.ColumnSpan="19" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                                <!--<Image.OpacityMask>
                                    <ImageBrush ImageSource="/Images/CameraPictureMask.png" Stretch="Fill" />
                                </Image.OpacityMask>-->
                            </Image>
                            <Image x:Name="CameraFrame" Grid.RowSpan="{Binding RowDefinitions.Count, ElementName=GridCameraPicture, Mode=OneWay}" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=GridCameraPicture, Mode=OneWay}"  Stretch="Fill" RenderTransformOrigin="0.5,0.5" Source="/Images/CameraFrame.png"/>
                        </Grid>
                    </Border>
                    <Border Grid.Column="1" BorderThickness="0,1,0,0">
                        <StackPanel x:Name="StackPanel_ResultImages">
                            <!--<Image x:Name="image" Source="/Images/DemoImage.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50" Height="50" Stretch="Fill" RenderTransformOrigin="0.5,0.5" >
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>-->
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
            <Grid Grid.Column="1" VerticalAlignment="Stretch" Background="{DynamicResource SolidBrushColorMainRightBar}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Name="BtnTestPrediction" HorizontalAlignment="Center" VerticalAlignment="Center" Click="BtnTestPrediction_Click">Predict</Button>
                <Border BorderBrush="#FFA2A2A2" BorderThickness="0,0,1,0" Grid.Column="1" Grid.RowSpan="2">
                    <Grid x:Name="grid" FlowDirection="RightToLeft">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Row="3" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=grid, Mode=OneWay}" Fill="{StaticResource SolidBrushColorMainTopBar}"  />
                        <TextBlock Grid.Row="3" Style="{StaticResource StyleTextInfo}" Text="تعداد پسته :" HorizontalAlignment="Right"/>
                        <Rectangle Grid.Row="4" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=grid, Mode=OneWay}" Fill="{StaticResource SolidBrushColorMainRightBar}"  />
                        <TextBlock Grid.Row="4" Style="{StaticResource StyleTextInfo}" Text="خندان :" HorizontalAlignment="Right"/>
                        <Rectangle Grid.Row="5" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=grid, Mode=OneWay}" Fill="{StaticResource SolidBrushColorMainTopBar}"  />
                        <TextBlock Grid.Row="5" Style="{StaticResource StyleTextInfo}" Text="غیر خندان :" HorizontalAlignment="Right"/>
                        <Rectangle Grid.Row="6" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=grid, Mode=OneWay}" Fill="{StaticResource SolidBrushColorMainRightBar}"  />
                        <TextBlock Grid.Row="6" Style="{StaticResource StyleTextInfo}" Text="میانگین زمان :" HorizontalAlignment="Right"/>
                        <Rectangle Grid.Column="2" Grid.RowSpan="{Binding RowDefinitions.Count, ElementName=grid, Mode=OneWay}" Fill="{StaticResource SolidColorBrushGridColumn}"  />
                        <TextBlock x:Name="TxtTotalCount" Grid.Row="3" Style="{StaticResource StyleTextInfo2}" Text="15" HorizontalAlignment="Stretch" VerticalAlignment="Center" TextAlignment="Center"/>
                        <TextBlock x:Name="TxtOpenedMouthCount" Grid.Row="4" Style="{StaticResource StyleTextInfo2}" Text="7"/>
                        <TextBlock x:Name="TxtClosedMouthCount" Grid.Row="5" Style="{StaticResource StyleTextInfo2}" Text="8"/>
                        <TextBlock x:Name="TxtAvgTime" Grid.Row="6" Style="{StaticResource StyleTextInfo2}" Text= "2ms"/>
                        <Border x:Name="CTBackgroundThumbnail" Grid.Row="7" Grid.ColumnSpan="{Binding ColumnDefinitions.Count, ElementName=grid, Mode=OneWay}" Grid.RowSpan="4" Margin="10,10,10,10" BorderThickness="1,1,1,1" BorderBrush="#FFD9D9D9" RenderTransformOrigin="0.5,0.5" Opacity="0">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform X="-30"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="عکس پس زمینه" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="5" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="{DynamicResource FontAdobeArabic}" FontSize="16" Foreground="#FFBFBFF3"/>
                                <Image x:Name="ImgBackgroundThumbnail" Grid.Row="2" Grid.Column="1" Grid.RowSpan="6" Grid.ColumnSpan="5" />
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
            <Border x:Name="CTBackgroundProcessing" Grid.ColumnSpan="2" Margin="30,30,30,30" Background="#FF666666" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" Grid.RowSpan="3" >
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="0"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid>
                    <Image x:Name="ImgBackgroundProcessing" Source="/Images/MainImage.png" Visibility="Visible" Stretch="Uniform"/>
                    <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Black" Opacity="0.3"/>
                    <!--<MediaElement x:Name="GIFProcessingWait" UnloadedBehavior="Manual" Source="/Images/ProcessingGIF.gif" Stretch="Fill" LoadedBehavior="Manual" Opacity="0.3" Visibility="Visible" MediaEnded="GIFProcessingWait_MediaEnded" HorizontalAlignment="Center" VerticalAlignment="Center" Width="200" Height="200"/>-->
                    <Image Name="ImgProcessingGIF" Width="70" Height="70"/>
                </Grid>
            </Border>
        </Grid>
    </Border>
</UserControl>
